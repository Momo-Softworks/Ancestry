buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = 'Clojars' // name can be ommitted, but is helpful in troubleshooting
            url = 'https://repo.clojars.org/'
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
            changing = true
        }
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id "dev.clojurephant.clojure" version "0.6.0-alpha.4"
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

configurations {
    shade
    implementation.extendsFrom(shade)
}

repositories {
    mavenCentral()
    maven {
        name = 'clojars'
        url = 'https://repo.clojars.org'
    }
}

apply plugin: 'forge'

version = "1.0"
group= "com.example.examplemod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "modid"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

dependencies {
    implementation 'org.clojure:clojure:1.10.1'
    shade "org.clojure:clojure:1.10.1"
}

checkClojure.enabled = false

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
    archiveClassifier.set('all')
}

shadowJar {
    configurations = [project.configurations.shade]
}

reobf {
    shadowJar {}
}

build.dependsOn shadowJar

task cljlessJar(type: Jar) {
    from sourceSets.main.output
}

task sourceJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

processResources
{
    duplicatesStrategy = DuplicatesStrategy.WARN

    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Sets both java and clojure folders as source, not necessary.

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        clojure {
            srcDirs = ['src/main/clojure']
        }
    }
}
